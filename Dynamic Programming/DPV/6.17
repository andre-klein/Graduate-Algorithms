Subproblem:
Let K[v] = max val coins up to index i for 0 <= v <= V and 1 <= i <= n

Base case:
K[0] = 0

Recurrence:
K[v] = max_i(vi + K[v-vi]) vi <= v
K[v] = 0, otherwise
Where 1 <= v <= V and 1 <= i <= n

Pseudocode:
for v = 0 to V: # O(V)
	K[v] = 0
	for i = 1 to n: # O(n)
		if vi <= v:
			K[v] = max(K[v], vi + K[v-vi])

return K[V] = V

Time complexity:
O(n*V)
