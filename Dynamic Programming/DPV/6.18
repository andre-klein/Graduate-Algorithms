Subproblem:
Let K[v,j] = True if v can be broken down by coins up to index j for 0 <= v <= V and 0 <= j <= n
Otherwise, K[v,j] = False

Base case:
K[0,.] = K[.,0] = True

Recurrence:
K(v,j) = max(vj + K[v-vj, j-1], K[v,j-1]), vj <= v
K(v,j) = 0, otherwise
Where 1 <= j <= n, 1 <= v <= V

Pseudocode:
for j = 0 to n: # O(n)
	K[0,j] = 0

for v = 1 to V: # O(V)
	K[v,0] = 0

for v = 1 to V: # O(V)
	for j = 1 to n: # O(n)
		if vi<=V:
			K[v,j] = max[vj + K(v-vj, j-1), K(v,j-1)]
		else:
			K[v,j] = K[v,j-1]

return K(V,n) = V

Time complexity:
O(n*V)
